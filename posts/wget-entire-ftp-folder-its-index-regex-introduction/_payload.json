[{"data":1,"prerenderedAt":672},["ShallowReactive",2],{"post":3,"content-query-cQ2C0wQzel":383},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"imagesource":10,"imagecredit":10,"imageFilename":11,"createdAt":12,"updatedAt":12,"readingTime":13,"body":18,"_type":377,"_id":378,"_source":379,"_file":380,"_stem":381,"_extension":382},"/posts/wget-entire-ftp-folder-its-index-regex-introduction","posts",false,"","Wget an entire FTP folder from its index (RegEx Introduction)","Using wget to grab whole folder from an FTP site with an HTTP front end",null,"2009.12.04T150000_wget-entire-ftp-folder-its-index-regex-introduction.jpg","2009-12-04T15:00:00",{"text":14,"minutes":15,"time":16,"words":17},"1 min read",0.195,11700,39,{"type":19,"children":20,"toc":375},"root",[21,29,34,171,176,217,222,242,247,266,271,287,292,297,325,330,349,354,359,364,369],{"type":22,"tag":23,"props":24,"children":25},"element","p",{},[26],{"type":27,"value":28},"text","Hi, folks!",{"type":22,"tag":23,"props":30,"children":31},{},[32],{"type":27,"value":33},"Just a couple of hours ago I was trying to download all the files in a folder on the OSUOSL FTP Slackware mirror with wget, and all I kept getting was the index.html file from the page, so I decided to write a little script to download any file linked in the index. I'm sure there are tools which can do this far more succinctly, but I thought this would be a good way to begin to explain the incredibly useful nature of regular expressions. Here's how my script turned out...",{"type":22,"tag":35,"props":36,"children":40},"pre",{"className":37,"code":38,"language":39,"meta":7,"style":7},"language-bash shiki shiki-themes github-dark","for i in $(wget ftp://ftp.mirrorservice.org/sites/ftp.slackware.com/pub/slackware/slackware-13.0/source/a/tar/ -O - | grep \"ftp://\" | sed 's/^.*href=\\\"//g' | sed 's/\\\".*$//g'); do\n    wget $i;\ndone\n","bash",[41],{"type":22,"tag":42,"props":43,"children":44},"code",{"__ignoreMap":7},[45,148,162],{"type":22,"tag":46,"props":47,"children":50},"span",{"class":48,"line":49},"line",1,[51,57,63,68,73,79,85,91,96,101,106,111,115,120,125,129,133,138,143],{"type":22,"tag":46,"props":52,"children":54},{"style":53},"--shiki-default:#F97583",[55],{"type":27,"value":56},"for",{"type":22,"tag":46,"props":58,"children":60},{"style":59},"--shiki-default:#E1E4E8",[61],{"type":27,"value":62}," i ",{"type":22,"tag":46,"props":64,"children":65},{"style":53},[66],{"type":27,"value":67},"in",{"type":22,"tag":46,"props":69,"children":70},{"style":59},[71],{"type":27,"value":72}," $(",{"type":22,"tag":46,"props":74,"children":76},{"style":75},"--shiki-default:#B392F0",[77],{"type":27,"value":78},"wget",{"type":22,"tag":46,"props":80,"children":82},{"style":81},"--shiki-default:#9ECBFF",[83],{"type":27,"value":84}," ftp://ftp.mirrorservice.org/sites/ftp.slackware.com/pub/slackware/slackware-13.0/source/a/tar/",{"type":22,"tag":46,"props":86,"children":88},{"style":87},"--shiki-default:#79B8FF",[89],{"type":27,"value":90}," -O",{"type":22,"tag":46,"props":92,"children":93},{"style":81},[94],{"type":27,"value":95}," -",{"type":22,"tag":46,"props":97,"children":98},{"style":53},[99],{"type":27,"value":100}," |",{"type":22,"tag":46,"props":102,"children":103},{"style":75},[104],{"type":27,"value":105}," grep",{"type":22,"tag":46,"props":107,"children":108},{"style":81},[109],{"type":27,"value":110}," \"ftp://\"",{"type":22,"tag":46,"props":112,"children":113},{"style":53},[114],{"type":27,"value":100},{"type":22,"tag":46,"props":116,"children":117},{"style":75},[118],{"type":27,"value":119}," sed",{"type":22,"tag":46,"props":121,"children":122},{"style":81},[123],{"type":27,"value":124}," 's/^.*href=\\\"//g'",{"type":22,"tag":46,"props":126,"children":127},{"style":53},[128],{"type":27,"value":100},{"type":22,"tag":46,"props":130,"children":131},{"style":75},[132],{"type":27,"value":119},{"type":22,"tag":46,"props":134,"children":135},{"style":81},[136],{"type":27,"value":137}," 's/\\\".*$//g'",{"type":22,"tag":46,"props":139,"children":140},{"style":59},[141],{"type":27,"value":142},"); ",{"type":22,"tag":46,"props":144,"children":145},{"style":53},[146],{"type":27,"value":147},"do\n",{"type":22,"tag":46,"props":149,"children":151},{"class":48,"line":150},2,[152,157],{"type":22,"tag":46,"props":153,"children":154},{"style":75},[155],{"type":27,"value":156},"    wget",{"type":22,"tag":46,"props":158,"children":159},{"style":59},[160],{"type":27,"value":161}," $i;\n",{"type":22,"tag":46,"props":163,"children":165},{"class":48,"line":164},3,[166],{"type":22,"tag":46,"props":167,"children":168},{"style":53},[169],{"type":27,"value":170},"done\n",{"type":22,"tag":23,"props":172,"children":173},{},[174],{"type":27,"value":175},"Now let me break it down... The first command I wanted was one to download the index.html file and extract the necessary link data from it's content. To download a file and then stream it's contents to another command, use the wget syntax:",{"type":22,"tag":35,"props":177,"children":179},{"className":37,"code":178,"language":39,"meta":7,"style":7},"wget {URL} -O - | {COMMAND}\n",[180],{"type":22,"tag":42,"props":181,"children":182},{"__ignoreMap":7},[183],{"type":22,"tag":46,"props":184,"children":185},{"class":48,"line":49},[186,190,195,199,203,207,212],{"type":22,"tag":46,"props":187,"children":188},{"style":75},[189],{"type":27,"value":78},{"type":22,"tag":46,"props":191,"children":192},{"style":81},[193],{"type":27,"value":194}," {URL}",{"type":22,"tag":46,"props":196,"children":197},{"style":87},[198],{"type":27,"value":90},{"type":22,"tag":46,"props":200,"children":201},{"style":81},[202],{"type":27,"value":95},{"type":22,"tag":46,"props":204,"children":205},{"style":53},[206],{"type":27,"value":100},{"type":22,"tag":46,"props":208,"children":209},{"style":59},[210],{"type":27,"value":211}," {",{"type":22,"tag":46,"props":213,"children":214},{"style":75},[215],{"type":27,"value":216},"COMMAND}\n",{"type":22,"tag":23,"props":218,"children":219},{},[220],{"type":27,"value":221},"First of all I piped the file's contents to grep, which ignores any line which does not contain the phrase \"ftp://\". This will ensures that we are only working with lines which contain a hyperlink to a file, ignoring all the extraneous HTML tags. The next process was to remove any of the surrounding HTML from the links. A link in an HTML document will always be preceeded by \u003Ca href=\". To remove this part, I used sed. There are other tools which would work in a similar manner, but I find sed to be a great way of learning regular expressions, and I find it's syntax to be very easy to understand. The command to remove anything up to and including the href=\" is as follows:",{"type":22,"tag":35,"props":223,"children":225},{"className":37,"code":224,"language":39,"meta":7,"style":7},"sed 's/^.*href=\\\"//g'\n",[226],{"type":22,"tag":42,"props":227,"children":228},{"__ignoreMap":7},[229],{"type":22,"tag":46,"props":230,"children":231},{"class":48,"line":49},[232,237],{"type":22,"tag":46,"props":233,"children":234},{"style":75},[235],{"type":27,"value":236},"sed",{"type":22,"tag":46,"props":238,"children":239},{"style":81},[240],{"type":27,"value":241}," 's/^.*href=\\\"//g'\n",{"type":22,"tag":23,"props":243,"children":244},{},[245],{"type":27,"value":246},"To anybody who doesn't understand regular expression syntax, this looks like a jumble of characters. I'll explain briefly how it works... Sed's syntax for basic search and replace is as follows:",{"type":22,"tag":35,"props":248,"children":250},{"className":37,"code":249,"language":39,"meta":7,"style":7},"sed 's/{REG EXP OR TEXT TO SEARCH FOR}/{TEXT TO REPLACE WITH/g'\n",[251],{"type":22,"tag":42,"props":252,"children":253},{"__ignoreMap":7},[254],{"type":22,"tag":46,"props":255,"children":256},{"class":48,"line":49},[257,261],{"type":22,"tag":46,"props":258,"children":259},{"style":75},[260],{"type":27,"value":236},{"type":22,"tag":46,"props":262,"children":263},{"style":81},[264],{"type":27,"value":265}," 's/{REG EXP OR TEXT TO SEARCH FOR}/{TEXT TO REPLACE WITH/g'\n",{"type":22,"tag":23,"props":267,"children":268},{},[269],{"type":27,"value":270},"The regexp to match in our example  is ^.*href=\\\"",{"type":22,"tag":23,"props":272,"children":273},{},[274,276,280,282,285],{"type":27,"value":275},"^ means \"From the beginning of the line\".",{"type":22,"tag":277,"props":278,"children":279},"br",{},[],{"type":27,"value":281},"\n.* is a wildcard, denoting absolutely any sequence of characters.",{"type":22,"tag":277,"props":283,"children":284},{},[],{"type":27,"value":286},"\n`href=\\\"` describes the exact text string we want to have as the final characters in the match. The `\\` is an escape character to force the `\"` to be treated as a character.",{"type":22,"tag":23,"props":288,"children":289},{},[290],{"type":27,"value":291},"In our command, the second part of the sed command is empty. This means that any text which matches the regexp will just be removed. The regexp will match from the beginning of any line which contains href=\" up to the \".",{"type":22,"tag":23,"props":293,"children":294},{},[295],{"type":27,"value":296},"Now each line processed will read something along the lines of:",{"type":22,"tag":35,"props":298,"children":300},{"className":37,"code":299,"language":39,"meta":7,"style":7},"ftp://ftp.mirrorservice.org:21/sites/ftp.slackware.com/pub/slackware/slackware-13.0/source/a/tar/rmt.8.gz\"&gt;rmt.8.gz\n(2429 bytes)\n",[301],{"type":22,"tag":42,"props":302,"children":303},{"__ignoreMap":7},[304,317],{"type":22,"tag":46,"props":305,"children":306},{"class":48,"line":49},[307,312],{"type":22,"tag":46,"props":308,"children":309},{"style":75},[310],{"type":27,"value":311},"ftp://ftp.mirrorservice.org:21/sites/ftp.slackware.com/pub/slackware/slackware-13.0/source/a/tar/rmt.8.gz",{"type":22,"tag":46,"props":313,"children":314},{"style":75},[315],{"type":27,"value":316},"\"&gt;rmt.8.gz\n",{"type":22,"tag":46,"props":318,"children":319},{"class":48,"line":150},[320],{"type":22,"tag":46,"props":321,"children":322},{"style":75},[323],{"type":27,"value":324},"(2429 bytes)\n",{"type":22,"tag":23,"props":326,"children":327},{},[328],{"type":27,"value":329},"The second use of sed will remove anything occurring after the filename. It reads like so:",{"type":22,"tag":35,"props":331,"children":333},{"className":37,"code":332,"language":39,"meta":7,"style":7},"sed 's/\\\".*$//g'\n",[334],{"type":22,"tag":42,"props":335,"children":336},{"__ignoreMap":7},[337],{"type":22,"tag":46,"props":338,"children":339},{"class":48,"line":49},[340,344],{"type":22,"tag":46,"props":341,"children":342},{"style":75},[343],{"type":27,"value":236},{"type":22,"tag":46,"props":345,"children":346},{"style":81},[347],{"type":27,"value":348}," 's/\\\".*$//g'\n",{"type":22,"tag":23,"props":350,"children":351},{},[352],{"type":27,"value":353},"This is used in the same way as the previous use of sed. The regexp to match is \\\".*$.",{"type":22,"tag":23,"props":355,"children":356},{},[357],{"type":27,"value":358},"$ means \"End of line\", so this matches everything from the first occurrence of \" up to the end of each line. The output should now be nothing but a list of links. The final part is to wrap the output in a loop, and hand each line to wget.",{"type":22,"tag":23,"props":360,"children":361},{},[362],{"type":27,"value":363},"Anyway, I hope this has been informative, and I'll no doubt post some more soon!",{"type":22,"tag":23,"props":365,"children":366},{},[367],{"type":27,"value":368},"n00b",{"type":22,"tag":370,"props":371,"children":372},"style",{},[373],{"type":27,"value":374},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"title":7,"searchDepth":150,"depth":150,"links":376},[],"markdown","content:posts:2009-12-04-wget-entire-ftp-folder-its-index-regex-introduction.md","content","posts/2009-12-04-wget-entire-ftp-folder-its-index-regex-introduction.md","posts/2009-12-04-wget-entire-ftp-folder-its-index-regex-introduction","md",{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"imagesource":10,"imagecredit":10,"imageFilename":11,"createdAt":12,"updatedAt":12,"readingTime":384,"body":385,"_type":377,"_id":378,"_source":379,"_file":380,"_stem":381,"_extension":382},{"text":14,"minutes":15,"time":16,"words":17},{"type":19,"children":386,"toc":670},[387,391,395,498,502,539,543,560,564,581,585,597,601,605,629,633,650,654,658,662,666],{"type":22,"tag":23,"props":388,"children":389},{},[390],{"type":27,"value":28},{"type":22,"tag":23,"props":392,"children":393},{},[394],{"type":27,"value":33},{"type":22,"tag":35,"props":396,"children":397},{"className":37,"code":38,"language":39,"meta":7,"style":7},[398],{"type":22,"tag":42,"props":399,"children":400},{"__ignoreMap":7},[401,480,491],{"type":22,"tag":46,"props":402,"children":403},{"class":48,"line":49},[404,408,412,416,420,424,428,432,436,440,444,448,452,456,460,464,468,472,476],{"type":22,"tag":46,"props":405,"children":406},{"style":53},[407],{"type":27,"value":56},{"type":22,"tag":46,"props":409,"children":410},{"style":59},[411],{"type":27,"value":62},{"type":22,"tag":46,"props":413,"children":414},{"style":53},[415],{"type":27,"value":67},{"type":22,"tag":46,"props":417,"children":418},{"style":59},[419],{"type":27,"value":72},{"type":22,"tag":46,"props":421,"children":422},{"style":75},[423],{"type":27,"value":78},{"type":22,"tag":46,"props":425,"children":426},{"style":81},[427],{"type":27,"value":84},{"type":22,"tag":46,"props":429,"children":430},{"style":87},[431],{"type":27,"value":90},{"type":22,"tag":46,"props":433,"children":434},{"style":81},[435],{"type":27,"value":95},{"type":22,"tag":46,"props":437,"children":438},{"style":53},[439],{"type":27,"value":100},{"type":22,"tag":46,"props":441,"children":442},{"style":75},[443],{"type":27,"value":105},{"type":22,"tag":46,"props":445,"children":446},{"style":81},[447],{"type":27,"value":110},{"type":22,"tag":46,"props":449,"children":450},{"style":53},[451],{"type":27,"value":100},{"type":22,"tag":46,"props":453,"children":454},{"style":75},[455],{"type":27,"value":119},{"type":22,"tag":46,"props":457,"children":458},{"style":81},[459],{"type":27,"value":124},{"type":22,"tag":46,"props":461,"children":462},{"style":53},[463],{"type":27,"value":100},{"type":22,"tag":46,"props":465,"children":466},{"style":75},[467],{"type":27,"value":119},{"type":22,"tag":46,"props":469,"children":470},{"style":81},[471],{"type":27,"value":137},{"type":22,"tag":46,"props":473,"children":474},{"style":59},[475],{"type":27,"value":142},{"type":22,"tag":46,"props":477,"children":478},{"style":53},[479],{"type":27,"value":147},{"type":22,"tag":46,"props":481,"children":482},{"class":48,"line":150},[483,487],{"type":22,"tag":46,"props":484,"children":485},{"style":75},[486],{"type":27,"value":156},{"type":22,"tag":46,"props":488,"children":489},{"style":59},[490],{"type":27,"value":161},{"type":22,"tag":46,"props":492,"children":493},{"class":48,"line":164},[494],{"type":22,"tag":46,"props":495,"children":496},{"style":53},[497],{"type":27,"value":170},{"type":22,"tag":23,"props":499,"children":500},{},[501],{"type":27,"value":175},{"type":22,"tag":35,"props":503,"children":504},{"className":37,"code":178,"language":39,"meta":7,"style":7},[505],{"type":22,"tag":42,"props":506,"children":507},{"__ignoreMap":7},[508],{"type":22,"tag":46,"props":509,"children":510},{"class":48,"line":49},[511,515,519,523,527,531,535],{"type":22,"tag":46,"props":512,"children":513},{"style":75},[514],{"type":27,"value":78},{"type":22,"tag":46,"props":516,"children":517},{"style":81},[518],{"type":27,"value":194},{"type":22,"tag":46,"props":520,"children":521},{"style":87},[522],{"type":27,"value":90},{"type":22,"tag":46,"props":524,"children":525},{"style":81},[526],{"type":27,"value":95},{"type":22,"tag":46,"props":528,"children":529},{"style":53},[530],{"type":27,"value":100},{"type":22,"tag":46,"props":532,"children":533},{"style":59},[534],{"type":27,"value":211},{"type":22,"tag":46,"props":536,"children":537},{"style":75},[538],{"type":27,"value":216},{"type":22,"tag":23,"props":540,"children":541},{},[542],{"type":27,"value":221},{"type":22,"tag":35,"props":544,"children":545},{"className":37,"code":224,"language":39,"meta":7,"style":7},[546],{"type":22,"tag":42,"props":547,"children":548},{"__ignoreMap":7},[549],{"type":22,"tag":46,"props":550,"children":551},{"class":48,"line":49},[552,556],{"type":22,"tag":46,"props":553,"children":554},{"style":75},[555],{"type":27,"value":236},{"type":22,"tag":46,"props":557,"children":558},{"style":81},[559],{"type":27,"value":241},{"type":22,"tag":23,"props":561,"children":562},{},[563],{"type":27,"value":246},{"type":22,"tag":35,"props":565,"children":566},{"className":37,"code":249,"language":39,"meta":7,"style":7},[567],{"type":22,"tag":42,"props":568,"children":569},{"__ignoreMap":7},[570],{"type":22,"tag":46,"props":571,"children":572},{"class":48,"line":49},[573,577],{"type":22,"tag":46,"props":574,"children":575},{"style":75},[576],{"type":27,"value":236},{"type":22,"tag":46,"props":578,"children":579},{"style":81},[580],{"type":27,"value":265},{"type":22,"tag":23,"props":582,"children":583},{},[584],{"type":27,"value":270},{"type":22,"tag":23,"props":586,"children":587},{},[588,589,592,593,596],{"type":27,"value":275},{"type":22,"tag":277,"props":590,"children":591},{},[],{"type":27,"value":281},{"type":22,"tag":277,"props":594,"children":595},{},[],{"type":27,"value":286},{"type":22,"tag":23,"props":598,"children":599},{},[600],{"type":27,"value":291},{"type":22,"tag":23,"props":602,"children":603},{},[604],{"type":27,"value":296},{"type":22,"tag":35,"props":606,"children":607},{"className":37,"code":299,"language":39,"meta":7,"style":7},[608],{"type":22,"tag":42,"props":609,"children":610},{"__ignoreMap":7},[611,622],{"type":22,"tag":46,"props":612,"children":613},{"class":48,"line":49},[614,618],{"type":22,"tag":46,"props":615,"children":616},{"style":75},[617],{"type":27,"value":311},{"type":22,"tag":46,"props":619,"children":620},{"style":75},[621],{"type":27,"value":316},{"type":22,"tag":46,"props":623,"children":624},{"class":48,"line":150},[625],{"type":22,"tag":46,"props":626,"children":627},{"style":75},[628],{"type":27,"value":324},{"type":22,"tag":23,"props":630,"children":631},{},[632],{"type":27,"value":329},{"type":22,"tag":35,"props":634,"children":635},{"className":37,"code":332,"language":39,"meta":7,"style":7},[636],{"type":22,"tag":42,"props":637,"children":638},{"__ignoreMap":7},[639],{"type":22,"tag":46,"props":640,"children":641},{"class":48,"line":49},[642,646],{"type":22,"tag":46,"props":643,"children":644},{"style":75},[645],{"type":27,"value":236},{"type":22,"tag":46,"props":647,"children":648},{"style":81},[649],{"type":27,"value":348},{"type":22,"tag":23,"props":651,"children":652},{},[653],{"type":27,"value":353},{"type":22,"tag":23,"props":655,"children":656},{},[657],{"type":27,"value":358},{"type":22,"tag":23,"props":659,"children":660},{},[661],{"type":27,"value":363},{"type":22,"tag":23,"props":663,"children":664},{},[665],{"type":27,"value":368},{"type":22,"tag":370,"props":667,"children":668},{},[669],{"type":27,"value":374},{"title":7,"searchDepth":150,"depth":150,"links":671},[],1735624508678]