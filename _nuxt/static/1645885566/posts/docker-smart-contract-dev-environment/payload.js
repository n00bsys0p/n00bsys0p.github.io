__NUXT_JSONP__("/posts/docker-smart-contract-dev-environment", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak){return {data:[{post:{slug:"docker-smart-contract-dev-environment",description:"Using VS Code's Devcontainers to set up a consistent shared development environment for Smart Contracts",title:"Setting Up a Containerised Smart Contract Dev Environment",imagesource:"https:\u002F\u002Fethereum.org\u002Fassets",imagecredit:"ethereum.org",image:"2022.02.26T10:43:28_docker-smart-contract-dev-environment.png",createdAt:S,updatedAt:S,toc:[{id:T,depth:U,text:V},{id:W,depth:U,text:X},{id:Y,depth:Z,text:_},{id:$,depth:Z,text:aa}],body:{type:"root",children:[{type:b,tag:g,props:{},children:[{type:a,value:"Almost 5 years after my last post (yikes, how time flies), I have resurfaced to write a bit about the Ethereum development environment I've been using."}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"My primary goal in setting up any development environment is that it should be consistently replicable, and ephemeral (i.e., I should be able to tear the whole thing down and get it back up again in just a couple of easily-documented steps). It shouldn't matter where I'm developing or what computer I'm using; whether I've just factory reset my computer, or I'm onboarding a new developer, I should be able to enter a couple of commands and develop in exactly the same environment, as free as possible of \"it works on my machine\" syndrome. If the environment is updated in one place, it should be as simple as possible to update it in all the others too."}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"To that end, I've been using "},{type:b,tag:m,props:{href:"https:\u002F\u002Fcode.visualstudio.com\u002F",rel:[y,z,A],target:B},children:[{type:a,value:"VS Code"}]},{type:a,value:"'s "},{type:b,tag:m,props:{href:"https:\u002F\u002Fcode.visualstudio.com\u002Fdocs\u002Fremote\u002Fcontainers",rel:[y,z,A],target:B},children:[{type:a,value:"Remote Containers"}]},{type:a,value:". This allows me to store the entire development environment's configuration as version-controlled code. This provides the huge benefit of being able to use a Git repository as the authoritative source of truth of the entire environment."}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Developing in Docker containers usually has a number of gotchas (Unix file permissions mostly), but VS Code works around these nicely, ensuring that the file permissions inside your workspace don't affect the permissions on your host rig. It also makes it easy to run as a non-root user, even if you are extending an existing Docker environment (look at "},{type:b,tag:m,props:{href:"https:\u002F\u002Fdocs.docker.com\u002Fdevelop\u002Fdevelop-images\u002Fmultistage-build\u002F",rel:[y,z,A],target:B},children:[{type:a,value:"multistage builds"}]},{type:a,value:" for some ideas on how to extend an existing Docker build environment for development)."}]},{type:a,value:e},{type:b,tag:ab,props:{id:T},children:[{type:b,tag:m,props:{href:"#so-what-are-we-going-to-do",ariaHidden:C,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:V}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"A fairly standard setup for an Ethereum development environment is "},{type:b,tag:m,props:{href:"https:\u002F\u002Fhardhat.org\u002F",rel:[y,z,A],target:B},children:[{type:a,value:"Hardhat"}]},{type:a,value:", which is a fully featured Ethereum development environment designed to be flexible, extensible and make it as easy as possible to debug. The ability to debug & test effectively is even more critical when developing Smart Contracts than it is in many traditional software development workflows, given the complexity of upgrading, and the incentive for bad actors to find ways to circumvent your carefully considered algorithms. My experience with Hardhat has been very positive, so that's what we'll be using as a base. But this guide should be relatively easily portable to your Smart Contract development environment of choice."}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"I tend to use either MacOS or WSL2 for developing software, so the commands in this guide will be tailored for *nix type systems. It's absolutely possible to use a pure Windows environment for this too, and many of the commands will work fine in PowerShell - but others you might need to tweak a bit."}]},{type:a,value:e},{type:b,tag:ab,props:{id:W},children:[{type:b,tag:m,props:{href:"#ok-how-do-we-do-it",ariaHidden:C,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:X}]},{type:a,value:e},{type:b,tag:ac,props:{id:Y},children:[{type:b,tag:m,props:{href:"#step-1---scaffold-the-environment",ariaHidden:C,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:_}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"First, create a new folder, initialise it as a Git repository and open VS Code:"}]},{type:a,value:e},{type:b,tag:o,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,G]},children:[{type:b,tag:i,props:{},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"mkdir"}]},{type:a,value:" eth-dev-environment\n"},{type:b,tag:c,props:{className:[d,s,L]},children:[{type:a,value:"cd"}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,"variable"]},children:[{type:a,value:"$_"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:M}]},{type:a,value:" init\ncode "},{type:b,tag:c,props:{className:[d,s,L]},children:[{type:a,value:N}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Now, we need to create a NodeJS devcontainer. We do this by pressing "},{type:b,tag:i,props:{},children:[{type:a,value:"Shift+Ctrl+P"}]},{type:a,value:" on Windows, or "},{type:b,tag:i,props:{},children:[{type:a,value:"Cmd+Shift+P"}]},{type:a,value:" on Mac; then we can type \"add dev\" into the search box to show the \"Add Development Container Configuration Files\" option."}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:b,tag:H,props:{alt:ad,src:"\u002Fimages\u002Fcontent\u002Fdocker-smart-contract-dev-environment\u002F01-command-palette-add-devcontainer.png"},children:[]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Now type \"node\" into the subsequent search box, and the standard \"Node.js & Typescript\" definition, then choose the latest version available, based on the instructions in the field. I'm using Ubuntu 20.04 on WSL2, and at this time the latest stable version is \"16\", so I choose that."}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"I don't need any additional features for my dev container, but if you feel like any of the options that it gives you would be useful, knock yourself out - they shouldn't affect the rest of the setup."}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"When you press OK, this will create a folder called "},{type:b,tag:i,props:{},children:[{type:a,value:".devcontainer"}]},{type:a,value:" inside your repository, and ask if you want to reopen the folder in the container as seen below. Before we do this, we'll quickly add a useful extension to the container - Solidity language support. Open "},{type:b,tag:i,props:{},children:[{type:a,value:".devcontainer\u002Fdevcontainer.json"}]},{type:a,value:" in your editor, and add "},{type:b,tag:i,props:{},children:[{type:a,value:"juanblanco.solidity"}]},{type:a,value:" to the "},{type:b,tag:i,props:{},children:[{type:a,value:"extensions"}]},{type:a,value:" array so it looks like this:"}]},{type:a,value:e},{type:b,tag:o,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,"language-json"]},children:[{type:b,tag:i,props:{},children:[{type:a,value:"    "},{type:b,tag:c,props:{className:[d,"property"]},children:[{type:a,value:"\"extensions\""}]},{type:b,tag:c,props:{className:[d,I]},children:[{type:a,value:":"}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"["}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"\"dbaeumer.vscode-eslint\""}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"\"juanblanco.solidity\""}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"]"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"If you miss this, don't worry - you can just open your command palette again and search for \"reopen\" to see the \"Remote Containers: Reopen in Container\" option."}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:b,tag:H,props:{alt:ad,src:"\u002Fimages\u002Fcontent\u002Fdocker-smart-contract-dev-environment\u002F02-reopen-folder-in-container.png"},children:[]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"This will probably take a short while the first time. You can see verbose progress by tapping the \"show log\" notification in the bottom right. It'll be a lot quicker on subsequent runs - it just has to pull the containers and set them up the first time you spin up the environment. When you get into the container, it'll probably show you the output of the container setup terminal window, so press the \"+\" icon near the top right of the bottom panel to bring up a new terminal window."}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Once you've found your way into your terminal window, initialise a NodeJS project with "},{type:b,tag:i,props:{},children:[{type:a,value:"yarn init"}]},{type:a,value:" and fill out the information to your requirements."}]},{type:a,value:e},{type:b,tag:ac,props:{id:$},children:[{type:b,tag:m,props:{href:"#step-2---install-hardhat--compile-your-first-smart-contract",ariaHidden:C,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:aa}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"To install Hardhat, we add it as a dev dependency of our project:"}]},{type:a,value:e},{type:b,tag:o,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,G]},children:[{type:b,tag:i,props:{},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"yarn"}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:ae}]},{type:a,value:" --dev hardhat\n"}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"And then we initialise it by running the following command, inside our workspace:"}]},{type:a,value:e},{type:b,tag:o,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,G]},children:[{type:b,tag:i,props:{},children:[{type:a,value:"npx hardhat\n"}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"This will give us a number of options. We're just running through a demo, so we'll choose \"Create an advanced sample project that uses Typescript\"."}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:b,tag:H,props:{alt:"VS Code Terminal - Init Hardhat",src:"\u002Fimages\u002Fcontent\u002Fdocker-smart-contract-dev-environment\u002F03-hardhat-init.png"},children:[]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"You should almost certainly choose to add a "},{type:b,tag:i,props:{},children:[{type:a,value:".gitignore"}]},{type:a,value:", but for the rest of the options you can either select all the default options from here, or configure them to your requirements. You'll now see tons of stuff scrolling through your terminal, and when it finishes, you'll have your development environment fully initialised. The sample project comes with a Greeter contract defined in "},{type:b,tag:i,props:{},children:[{type:a,value:"contracts\u002FGreeter.sol"}]},{type:a,value:", and a unit test which shows a brief example of how you can assert that your contract behaves as it should. The Greeter contract is super simple, and is defined as follows:"}]},{type:a,value:e},{type:b,tag:o,props:{className:[p]},children:[{type:b,tag:c,props:{className:["filename"]},children:[{type:a,value:"Greeter.sol"}]},{type:b,tag:q,props:{className:[r,"language-solidity"]},children:[{type:b,tag:i,props:{},children:[{type:b,tag:c,props:{className:[d,"comment"]},children:[{type:a,value:"\u002F\u002FSPDX-License-Identifier: Unlicense"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"pragma"}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"solidity"}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,I]},children:[{type:a,value:"^"}]},{type:b,tag:c,props:{className:[d,"version","number"]},children:[{type:a,value:"0.8.0"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"import"}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"\"hardhat\u002Fconsole.sol\""}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"contract"}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:"Greeter"}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:J}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:l}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"private"}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"constructor"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:l}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:R}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:J}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:ah}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"\"Deploying a Greeter with greeting:\""}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,I]},children:[{type:a,value:aj}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:K}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"greet"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ak}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"view"}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"returns"}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:l}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:J}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"return"}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:K}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"setGreeting"}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:l}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:R}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ak}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:J}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:ah}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"\"Changing greeting from '%s' to '%s'\""}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,I]},children:[{type:a,value:aj}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:n}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:K}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:K}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"To confirm that your environment is capable of compiling this and that it does do what it's expected to, run "},{type:b,tag:i,props:{},children:[{type:a,value:"npx hardhat test"}]},{type:a,value:" in your Development Container's terminal window, and you should see Hardhat automatically downloading the correct version of "},{type:b,tag:i,props:{},children:[{type:a,value:"solc"}]},{type:a,value:", then the test passing. You will also see some other output, generated by Hardhat's "},{type:b,tag:i,props:{},children:[{type:a,value:"console.log"}]},{type:a,value:" function (imported at the top with "},{type:b,tag:i,props:{},children:[{type:a,value:"import \"hardhat\u002Fconsole.sol\""}]},{type:a,value:"). This is an immensely useful feature of Hardhat, providing a streamlined way to analyse what's going on at each stage of your contract's execution."}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:b,tag:H,props:{alt:"VS Code Terminal - Hardhat test output",src:"\u002Fimages\u002Fcontent\u002Fdocker-smart-contract-dev-environment\u002F04-hardhat-test.png"},children:[]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Now that we've proven that our environment works as expected, we'll commit it, ready to start working on our Smart Contracts."}]},{type:a,value:e},{type:b,tag:o,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,G]},children:[{type:b,tag:i,props:{},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:M}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:ae}]},{type:a,value:" -A\n"},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:M}]},{type:a,value:" commit -m "},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"\"Initial commit\""}]},{type:a,value:e}]}]}]}]},dir:"\u002Fposts",path:"\u002Fposts\u002Fdocker-smart-contract-dev-environment",extension:".md",readingStats:{text:"6 min read",minutes:5.955,time:357300,words:1191},postedAgo:"4 hours ago"}}],fetch:{},mutations:void 0}}("text","element","span","token","\n","punctuation","p"," ","code","keyword","function","string","a",";","div","nuxt-content-highlight","pre","line-numbers","builtin","("," _greeting",")",",","\n    ","nofollow","noopener","noreferrer","_blank","true",-1,"icon","icon-link","language-shell","img","operator","{","}","class-name","git",".","\n        "," greeting","\n\n    ","memory","2022-02-26T10:43:28.000Z","so-what-are-we-going-to-do",2,"So, what are we going to do?","ok-how-do-we-do-it","Ok, how do we do it?","step-1---scaffold-the-environment",3,"Step 1 - Scaffold the environment","step-2---install-hardhat--compile-your-first-smart-contract","Step 2 - Install Hardhat & compile your first Smart Contract!","h2","h3","NodeJS Command Palette - Add Dev Container Config","add","\n\n","\n        console","log","\n        greeting ","=","public")));