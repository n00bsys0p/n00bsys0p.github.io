__NUXT_JSONP__("/posts/optimising-slackware-boot-time-part-3", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z){return {data:[{post:{slug:"optimising-slackware-boot-time-part-3",description:"The final part in my Optimising Slackware Boot Time series.",title:"Optimising Slackware Boot Time (part 3).",imagesource:T,imagecredit:T,image:"2009.03.01T15:00:00_optimising-slackware-boot-time-part-3.jpg",createdAt:U,updatedAt:U,toc:[],body:{type:"root",children:[{type:b,tag:j,props:{},children:[{type:a,value:"Hi everybody. Many apologies for the time it's taken me to get this post done. Had some bad news this week."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"Anyway... On with the festivities..."}]},{type:a,value:e},{type:b,tag:V,props:{},children:[{type:a,value:"Fscking With The rc Scripts."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"First up - This has very little to do with fsck, the file system checker, I was just being not-very-subtly crude. Also, this section's not going to be a huge one, as there isn't a huge amount to modifying the rc scripts beyond what we covered in the previous section."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:b,tag:"strong",props:{},children:[{type:a,value:"NOTE: YOU NEED TO BACK UP ANY FILES EDITED IN THIS GUIDE BEFORE TOUCHING THEM. IF YOU DON'T, YOU'RE AN IDIOT AND ARE GOING TO BREAK YOUR PC."}]}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"As I mentioned in the first section, the first script to be run is rc.S. This basically contains clauses which run services possibly required for operation of your linux box. As these scripts are extremely generic, there is a lot of what I like to call \"crap\" in there."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"As with the previous guide, start by commenting out or deleting things which are completely irrelevant to the running of your PC, for example if you're not likely to need LVM (Logical Volume Management) remove the following section:"}]},{type:a,value:e},{type:b,tag:r,props:{className:[s]},children:[{type:b,tag:t,props:{className:[u,v]},children:[{type:b,tag:w,props:{},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"# Initialize the Logical Volume Manager."}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"# This won't start unless we find \u002Fetc\u002Flvmtab (LVM1) or"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"# \u002Fetc\u002Flvm\u002Fbackup\u002F (LVM2).  This is created by \u002Fsbin\u002Fvgscan, so to"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"# use LVM you must run \u002Fsbin\u002Fvgscan yourself the first time (and"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"# create some VGs and LVs)."}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:D}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:x}]},{type:a,value:" -r \u002Fetc\u002Flvmtab -o -d \u002Fetc\u002Flvm\u002Fbackup "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:z}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,m,n]},children:[{type:a,value:A}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"\"Initializing LVM (Logical Volume Manager):\""}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"# Check for device-mapper support."}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:D}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"!"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:W}]},{type:a,value:" -wq device-mapper \u002Fproc\u002Fdevices "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:z}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"# Try to load a device-mapper kernel module:"}]},{type:a,value:"\n    \u002Fsbin\u002Fmodprobe -q dm-mod\n  "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:F}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"# Scan for new volume groups:"}]},{type:a,value:"\n  \u002Fsbin\u002Fvgscan --mknodes --ignorelockingfailure "},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:X}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:o}]},{type:a,value:" \u002Fdev\u002Fnull\n  "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:D}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:x}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"$?"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:G}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:"0"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:z}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"# Make volume groups available to the kernel."}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"# This should also make logical volumes available."}]},{type:a,value:"\n    \u002Fsbin\u002Fvgchange -ay --ignorelockingfailure\n  "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:F}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:F}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"Same business with any section you don't think you'll be needing. If you're ever unsure of what a section does, then read up on it. If you still don't understand after researching it, leave it in."}]},{type:a,value:e},{type:b,tag:V,props:{},children:[{type:a,value:"A few rules"}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"There are a couple of rules to try to stick by once you've outright deleted everything that you're definitely not going to need. The first, as before, is to avoid conditionals. If you need something, make sure it's executable then remove any check for it's validity. An example of original code you may need is:"}]},{type:a,value:e},{type:b,tag:r,props:{className:[s]},children:[{type:b,tag:t,props:{className:[u,v]},children:[{type:b,tag:w,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:D}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:x}]},{type:a,value:" -x \u002Fetc\u002Frc.d\u002Frc.modules.local -a -r \u002Fproc\u002Fmodules "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:z}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,m,n]},children:[{type:a,value:A}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"\"Running \u002Fetc\u002Frc.d\u002Frc.modules.local:\""}]},{type:a,value:"\n  \u002Fbin\u002Fsh \u002Fetc\u002Frc.d\u002Frc.modules.local\n"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:N}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:x}]},{type:a,value:" -x \u002Fetc\u002Frc.d\u002Frc.modules-"},{type:b,tag:c,props:{className:[d,f]},children:[{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:O}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:I}]}]},{type:a,value:" -a -r \u002Fproc\u002Fmodules "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:z}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,m,n]},children:[{type:a,value:A}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"\"Running \u002Fetc\u002Frc.d\u002Frc.modules-"},{type:b,tag:c,props:{className:[d,f]},children:[{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:O}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:I}]}]},{type:a,value:Q}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,m,n]},children:[{type:a,value:R}]},{type:a,value:" \u002Fetc\u002Frc.d\u002Frc.modules-"},{type:b,tag:c,props:{className:[d,f]},children:[{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:O}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:I}]}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:N}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:x}]},{type:a,value:" -x \u002Fetc\u002Frc.d\u002Frc.modules -a -r \u002Fproc\u002Fmodules -a -L \u002Fetc\u002Frc.d\u002Frc.modules "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:a,value:"$\n  "},{type:b,tag:c,props:{className:[d,m,n]},children:[{type:a,value:A}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"\"Running \u002Fetc\u002Frc.d\u002Frc.modules -&amp;amp;gt; "},{type:b,tag:c,props:{className:[d,f]},children:[{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:H}]},{type:a,value:"readlink \u002Fetc\u002Frc.d\u002Frc.modules"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:I}]}]},{type:a,value:Q}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,m,n]},children:[{type:a,value:R}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:N}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:x}]},{type:a,value:" -x \u002Fetc\u002Frc.d\u002Frc.modules -a -r \u002Fproc\u002Fmodules "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:z}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,m,n]},children:[{type:a,value:A}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"\"Running \u002Fetc\u002Frc.d\u002Frc.modules:\""}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,m,n]},children:[{type:a,value:R}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:F}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"This is crap in a couple of ways. Not only does it use nested conditionals to execute the program, but it uses sh to run a script which is unnecessarily huuuuuge for a machine which you can guarantee is built properly and works every time. For this clause, I insert the following:"}]},{type:a,value:e},{type:b,tag:r,props:{className:[s]},children:[{type:b,tag:t,props:{className:[u,v]},children:[{type:b,tag:w,props:{},children:[{type:a,value:"  "},{type:b,tag:c,props:{className:[d,K,f]},children:[{type:a,value:"NEWMODS"}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:G}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,f]},children:[{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:H}]},{type:a,value:"\u002Fusr\u002Fbin\u002Ffind \u002Flib\u002Fmodules\u002F$RELEASE -mindepth "},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:M}]},{type:a,value:" -type f -newer \u002Flib\u002Fmodules\u002F$RELEASE\u002Fmodules.dep"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:I}]}]},{type:a,value:L}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"# Only rebuild dependencies if new module(s) are found:"}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:D}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:x}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"$NEWMODS"}]},{type:a,value:L}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:z}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,m,n]},children:[{type:a,value:A}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"\"Updating module dependencies for Linux "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"$RELEASE"}]},{type:a,value:Q}]},{type:a,value:"\n    \u002Fsbin\u002Fdepmod -a\n "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:"else"}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,m,n]},children:[{type:a,value:A}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"\"Module dependencies up to date (no new kernel modules found).\""}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:F}]},{type:a,value:"\n\u002Fsbin\u002Fmodprobe agpgart "},{type:b,tag:c,props:{className:[d,J]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:X}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:o}]},{type:a,value:"\u002Fdev\u002Fnull\n\u002Fsbin\u002Fmodprobe raid1\n\u002Fsbin\u002Fmodprobe ip_conntrack_ftp\n\u002Fsbin\u002Fmodprobe ip_nat_ftp\n\u002Fsbin\u002Fmodprobe acpi-cpufreq\n\u002Fsbin\u002Fmodprobe cpufreq_powersave\n"},{type:b,tag:c,props:{className:[d,m,n]},children:[{type:a,value:"unset"}]},{type:a,value:" NEWMODS RELEASE\n"}]}]}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"WHAT!? I hear you exclaim. Howd'ya reckon that then!?!? I hear you ask. Simply, I have extracted the contents of rc.modules which was of any use at all to me and inserted it directly into rc.S. Bear in mind, this example was for my file server, so didn't require sound or and bells and whistles. It's very unlikely that you'll use exactly this code. I warn you... You will not necessarily have a legible boot script by the time you have finished this. Comment it religiously is my advice."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"Another thing you want to try and avoid is piping output. These scripts will never contain anything as dodgy as the following example, but you'll get the idea."}]},{type:a,value:e},{type:b,tag:r,props:{className:[s]},children:[{type:b,tag:t,props:{className:[u,v]},children:[{type:b,tag:w,props:{},children:[{type:b,tag:c,props:{className:[d,K,f]},children:[{type:a,value:S}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:G}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:"cat"}]},{type:a,value:" \u002Fvar\u002Flog\u002Fsyslog "},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"|"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:W}]},{type:a,value:" -i \u002Fusr\u002Fbin\u002Fcron"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:C}]}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"Once you see something like this there are a few things you can do with it. First up, remove the redundant cat and specify the location of grep. It will now read:"}]},{type:a,value:e},{type:b,tag:r,props:{className:[s]},children:[{type:b,tag:t,props:{className:[u,v]},children:[{type:b,tag:w,props:{},children:[{type:b,tag:c,props:{className:[d,K,f]},children:[{type:a,value:S}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:G}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:C}]},{type:a,value:"\u002Fbin\u002Fgrep -i \u002Fusr\u002Fbin\u002Fcron \u002Fvar\u002Flog\u002Fsyslog"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:C}]}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"Now check to see if it really needs to search case insensitively. For example, you may have many occurences of \u002FUSR\u002FBIN\u002FCRON, but none of \u002Fusr\u002Fbin\u002Fcron. In this case, modify the variable to the following:"}]},{type:a,value:e},{type:b,tag:r,props:{className:[s]},children:[{type:b,tag:t,props:{className:[u,v]},children:[{type:b,tag:w,props:{},children:[{type:b,tag:c,props:{className:[d,K,f]},children:[{type:a,value:S}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:G}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:C}]},{type:a,value:"\u002Fbin\u002Fgrep \u002FUSR\u002FBIN\u002FCRON \u002Fvar\u002Flog\u002Fsyslog"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:C}]}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"Now you've optimised the variable's initialisation speed, it's time to check how many occurences of this variable you have in your script. If you only have one, then remove the variable definition alltogether and replace $OUTPUT in your script with"}]},{type:a,value:e},{type:b,tag:r,props:{className:[s]},children:[{type:b,tag:t,props:{className:[u,v]},children:[{type:b,tag:w,props:{},children:[{type:a,value:"\u002Fbin\u002Fgrep \u002FUSR\u002FBIN\u002FCRON \u002Fvar\u002Flog\u002Fsyslog\n"}]}]}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"Before I get a tirade of people telling me that what I've just said is a pile of horse-crap, I know that these final examples are way exaggerated. No professional would ever include something so ridiculous in their OS, but the point of this article is to get people to think about optimisation, not spoon feed them replacement clauses."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"Anyway... If I think of anything else to put in here, I'll make a revision, but for now I think that this is probably food for thought."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"As always, direct any questions\u002Fflaming to the comments."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"BYE!"}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"n00b"}]}]},dir:"\u002Fposts",path:"\u002Fposts\u002Foptimising-slackware-boot-time-part-3",extension:".md",readingStats:{text:"5 min read",minutes:4.73,time:283800,words:946},postedAgo:"13 years ago"}}],fetch:{},mutations:void 0}}("text","element","span","token","\n","variable"," ","punctuation","keyword","p","\n  ","comment","builtin","class-name",";","string","operator","div","nuxt-content-highlight","pre","language-bash","line-numbers","code","[","]","then","echo","function","`","if","\n    ","fi","=","$(",")","number","assign-left","\"","2","elif","uname"," -r",":\"",".","OUTPUT",null,"2009-03-01T15:00:00.000Z","h1","grep","&","gt"," \u002Fetc\u002Frc.d\u002Frc.modules\n")));