__NUXT_JSONP__("/posts/interestinguseful-bash-techniques", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae){return {data:[{post:{slug:"interestinguseful-bash-techniques",description:"Some great BASH tips, tricks and features",title:"Interesting\u002Fuseful BASH techniques",imagesource:Q,imagecredit:Q,image:"2011.09.27T14:00:00_interestinguseful-bash-techniques.png",createdAt:R,updatedAt:R,toc:[{depth:x,text:S},{depth:x,text:T},{depth:x,text:U},{depth:x,text:V},{depth:x,text:W},{depth:x,text:X}],body:{type:"root",children:[{type:b,tag:j,props:{},children:[{type:a,value:"Hey folks, BASH is the core of most Linux system administrators' arsenal, and a good understanding of different techniques in BASH can be an absolute life-saver, so I've decided to compile and document a list of some of the interesting usages I've come across, both recently, and in my days at the office."}]},{type:a,value:e},{type:b,tag:y,props:{},children:[{type:a,value:S}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"One of the most useful quick and dirty command combinations I've come across is the one-liner conditional. This doesn't just mean using "},{type:b,tag:J,props:{},children:[{type:a,value:"if condition; then do stuff; fi, "}]},{type:a,value:"as that's technically 3 lines, delimited with a semicolon. Here's an example:"}]},{type:a,value:e},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:s,props:{},children:[{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:G}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:G}]},{type:a,value:" -e \u002Fsys\u002Fblock\u002Fsda "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:H}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:w}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:w}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,u,v]},children:[{type:a,value:z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"\"Hard drive detected\""}]},{type:a,value:"\nNow this could also have been achieved with a single square bracket, however I tend to use the double, as it has many "},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"more"}]},{type:a,value:" features. Here's an example:\n"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:G}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:G}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"\"Once upon a time\""}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:"=~"}]},{type:a,value:" ^Once*me "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:H}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:w}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:w}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,u,v]},children:[{type:a,value:z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"\"Pattern matches\""}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"The double bracket can also do regex, as you can see. "},{type:b,tag:L,props:{href:"http:\u002F\u002Fmywiki.wooledge.org\u002FBashFAQ\u002F031",target:"_blank",title:"BashFAQ"},children:[{type:a,value:"Here's a link to explain more."}]}]},{type:a,value:e},{type:b,tag:y,props:{},children:[{type:a,value:T}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"This command will ask the user for input, should a variable not be set:"}]},{type:a,value:e},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:s,props:{},children:[{type:b,tag:c,props:{className:[d,Y,g]},children:[{type:a,value:"param"}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:Z}]},{type:a,value:"$"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"{"}]},{type:a,value:"param:-"},{type:b,tag:c,props:{className:[d,g]},children:[{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,u,v]},children:[{type:a,value:M}]},{type:a,value:" -p "},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"\"Enter parameter: \""}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,u,v]},children:[{type:a,value:z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"\"Parameter now set.\""}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:C}]}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"This basically states that if the bash variable $param isn't set, set it to the value after the colon-dash, which in this case is a BASH subshell, which runs the "},{type:b,tag:J,props:{},children:[{type:a,value:"read command"}]},{type:a,value:". I find this commonly used in Slackbuild scripts (for compiling software for Slackware Linux)"}]},{type:a,value:e},{type:b,tag:y,props:{},children:[{type:a,value:U}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"The "},{type:b,tag:J,props:{},children:[{type:a,value:M}]},{type:a,value:" command can be used to read user input, but not echo it to the screen, such as during password entry. I recently used this to allow password entry in the following manner:"}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"First, I created a password hash and stored it in a file as follows:"}]},{type:a,value:e},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:s,props:{},children:[{type:b,tag:c,props:{className:[d,u,v]},children:[{type:a,value:z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"\"MyPassword\""}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:D}]},{type:a,value:" sha512sum "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:w}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:" ~\u002Fpassword.sha\n"}]}]}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"I then used the following code in a script to verify it:"}]},{type:a,value:e},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:s,props:{},children:[{type:b,tag:c,props:{className:[d,"shebang","important"]},children:[{type:a,value:"#!\u002Fbin\u002Fbash"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,u,v]},children:[{type:a,value:M}]},{type:a,value:" -sp "},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"\"Password: \""}]},{type:a,value:" PASSWORD\n"},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:"if"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:"!"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:G}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:I},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:"$PASSWORD"}]},{type:a,value:I}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:"=="}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:I},{type:b,tag:c,props:{className:[d,g]},children:[{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:"cat"}]},{type:a,value:" ~\u002Fpassword.sha"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:C}]}]},{type:a,value:I}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:"then"}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,u,v]},children:[{type:a,value:z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"\"Password entry failed.\""}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,u,v]},children:[{type:a,value:"exit"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,E]},children:[{type:a,value:$}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:"fi"}]},{type:a,value:"\n\n"},{type:b,tag:c,props:{className:[d,u,v]},children:[{type:a,value:z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"\"Password success! Continuing\""}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:y,props:{},children:[{type:a,value:V}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"This is done using the xwd command, which will likely be preinstalled on most Linux distributions:"}]},{type:a,value:e},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:s,props:{},children:[{type:a,value:"xwd -display localhost:0 -root "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:w}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:" xsession.xwd\n"}]}]}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"The file can then be converted into a more usable file using the "},{type:b,tag:J,props:{},children:[{type:a,value:"convert"}]},{type:a,value:" command from the imagemagick package in the following way:"}]},{type:a,value:e},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:s,props:{},children:[{type:a,value:"convert xsession.xwd xsession.png\n"}]}]}]},{type:a,value:e},{type:b,tag:y,props:{},children:[{type:a,value:W}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"This one's quite well known, but I'm adding it so I remember it if I ever need it! The simple answer is to put a \" \" (space) before the command, like so:"}]},{type:a,value:e},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:s,props:{},children:[{type:b,tag:c,props:{className:[d,aa]},children:[{type:a,value:"# The original command"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:ab}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:ac}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,aa]},children:[{type:a,value:"# The modified command"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:ab}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:ac}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:y,props:{},children:[{type:a,value:X}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"This can be incredibly useful. I have the following prompt on one of my file servers:"}]},{type:a,value:e},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:s,props:{},children:[{type:b,tag:c,props:{className:[d,Y,g]},children:[{type:b,tag:c,props:{className:[d,"environment","constant"]},children:[{type:a,value:"PS1"}]}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:I},{type:b,tag:c,props:{className:[d,m],title:F},children:[{type:a,value:F}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,m],title:k},children:[{type:a,value:k}]},{type:a,value:"[35m\\]\\"},{type:b,tag:c,props:{className:[d,g]},children:[{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:B}]},{type:a,value:"\u002Fbin\u002Fdate"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:C}]}]},{type:b,tag:c,props:{className:[d,m],title:F},children:[{type:a,value:F}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,m],title:k},children:[{type:a,value:k}]},{type:a,value:"[32m\\]\\w"},{type:b,tag:c,props:{className:[d,m],title:F},children:[{type:a,value:F}]},{type:a,value:P},{type:b,tag:c,props:{className:[d,m],title:k},children:[{type:a,value:k}]},{type:a,value:"[1;31m\\]\\u@\\h: \\["},{type:b,tag:c,props:{className:[d,m],title:k},children:[{type:a,value:k}]},{type:a,value:"[1;34m\\]\\"},{type:b,tag:c,props:{className:[d,g]},children:[{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:B}]},{type:a,value:"\u002Fusr\u002Fbin\u002Ftty "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:D}]},{type:a,value:" \u002Fbin\u002Fsed -e "},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"'s:\u002Fdev\u002F::'"}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:C}]}]},{type:a,value:": \\["},{type:b,tag:c,props:{className:[d,m],title:k},children:[{type:a,value:k}]},{type:a,value:"[1;36m\\]\\"},{type:b,tag:c,props:{className:[d,g]},children:[{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:B}]},{type:a,value:"\u002Fbin\u002Fls -1 "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:D}]},{type:a,value:" \u002Fusr\u002Fbin\u002Fwc -l "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:D}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"'s: ::g'"}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:C}]}]},{type:a,value:" files \\["},{type:b,tag:c,props:{className:[d,m],title:k},children:[{type:a,value:k}]},{type:a,value:"[1;33m\\]\\"},{type:b,tag:c,props:{className:[d,g]},children:[{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:B}]},{type:a,value:"\u002Fbin\u002Fls -lah "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:D}]},{type:a,value:" \u002Fbin\u002Fgrep -m "},{type:b,tag:c,props:{className:[d,E]},children:[{type:a,value:$}]},{type:a,value:" total "},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:D}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"'s\u002Ftotal \u002F\u002F'"}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:C}]}]},{type:a,value:"b\\["},{type:b,tag:c,props:{className:[d,m],title:k},children:[{type:a,value:k}]},{type:a,value:"[0m\\] -&gt; \\["},{type:b,tag:c,props:{className:[d,m],title:k},children:[{type:a,value:k}]},{type:a,value:"[0m\\]\""}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"This shows the date in purple on the first line and the current working directory in green on the second. The third line contains a few snippets: The user and hostname, the current tty (pts\u002F[0-9]), the number of files in the folder, and the size they take up. It looks like this (only with colour):"}]},{type:a,value:e},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:s,props:{},children:[{type:a,value:"Tue Sep "},{type:b,tag:c,props:{className:[d,E]},children:[{type:a,value:"27"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,E]},children:[{type:a,value:"21"}]},{type:a,value:":16:32 BST "},{type:b,tag:c,props:{className:[d,E]},children:[{type:a,value:"2011"}]},{type:a,value:"\n~\u002FDocuments\nn00b@server: pts\u002F0: "},{type:b,tag:c,props:{className:[d,E]},children:[{type:a,value:"120"}]},{type:a,value:" files: 432Mb -"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:w}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"I got this particular prompt from "},{type:b,tag:L,props:{href:"http:\u002F\u002Fmaketecheasier.com\u002F8-useful-and-interesting-bash-prompts\u002F2009\u002F09\u002F04"},children:[{type:a,value:ae}]},{type:a,value:". For more information about colours in BASH scripts, try "},{type:b,tag:L,props:{href:"http:\u002F\u002Ftldp.org\u002FHOWTO\u002FBash-Prompt-HOWTO\u002Fx329.html"},children:[{type:a,value:ae}]},{type:a,value:"."}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:f}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"I reckon that's enough for today. I'll carry on collecting interesting snippets and posting them together in the future. Hope somebody out there found this useful!"}]},{type:a,value:e},{type:b,tag:j,props:{},children:[{type:a,value:"n00b"}]}]},dir:"\u002Fposts",path:"\u002Fposts\u002Finterestinguseful-bash-techniques",extension:".md",readingStats:{text:"4 min read",minutes:3.2,time:192000,words:640},postedAgo:"11 years ago"}}],fetch:{},mutations:void 0}}("text","element","span","token","\n"," ","variable","punctuation","operator","p","\\033","string","entity","div","nuxt-content-highlight","pre","language-bash","line-numbers","code",";","builtin","class-name","&",3,"h3","echo","function","$(",")","|","number","\\n","[","]","\"","em","amp","a","read","gt","keyword","\\[",null,"2011-09-27T14:00:00.000Z","One liner conditional","Enter parameter if empty","Read a password in BASH (no character echo)","Take an X session screenshot from CLI","Stop a command from going into BASH history","Change the BASH prompt","assign-left","=","\n        ","1","comment","which","bash"," \u002Fbin\u002Fsed ","this site")));