__NUXT_JSONP__("/posts/postfix-and-courier-imap-authentication-mysql-using-courier", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){return {data:[{post:{slug:"postfix-and-courier-imap-authentication-mysql-using-courier",description:"IMAP e-mail server using MySQL for authentication",title:"Postfix and Courier IMAP Authentication via MySQL using Courier",imagesource:r,imagecredit:r,image:"2011.08.09T14:00:00_postfix-and-courier-imap-authentication-mysql-using-courier.png",createdAt:s,updatedAt:s,toc:[],body:{type:"root",children:[{type:b,tag:d,props:{},children:[{type:a,value:"Hi guys!"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I've been working on making a Postfix server authenticate using encrypted passwords in a MySQL database. This seemed, by all accounts, and the number of How-To guides online, to be a pretty simple job. I seriously couldn't have been more wrong. The majority of the guides worked without a hitch... Courier IMAP connected straight up, without a hitch, but Postfix simply refused to. The case seemed to be (from reading online about it), that saslauthd's auxprop SQL driver doesn't like passwords being stored in an encrypted form. For modern software, this is absolutely absurd, if you ask me. Nevertheless, after multiple days tearing my hair out, I thought to myself \"Why am I using two different auth mechanisms? Can I use Courier's Authdaemon, which works fine with Courier IMAP, to authenticate Postfix too?\". The answer is absolutely yes."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This is how I did it:"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The first step, was to use the following guide, and a couple of others available online as a basepoint, without adding any of the user interface tools, and changing the layout of the email tables somewhat, to better fit my own purpose: "},{type:b,tag:h,props:{href:i,target:j},children:[]},{type:b,tag:h,props:{href:i,rel:["nofollow","noopener","noreferrer"],target:j},children:[{type:a,value:i}]},{type:a,value:t}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Once, however, I got to the section about using saslauthd via pam to authenticate your SMTP server, it rapidly became impossible to complete. No matter if the guide is followed to the letter, you may well still end up with authentication problems. The specific problem I had, was that saslauthd wouldn't seem to query my SQL server. All I ever saw in the SQL debug logs was logins, and the server quitting again, without querying the db at all. Needless to say, this was pretty seriously frustrating, as I could find little to no help online, and whenever I found something relevant, the only answers were something to the effect of \"LOL, give up - Postfix sucks\"."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"As I previously mentioned, the IMAP server was working without fault, so I could only assume that Courier-Authdaemon was doing its job perfectly, and sure enough, when I checked the auth and mysql debug logs, I could see that it was successfully querying the db, and authenticating my mail user correctly. It is a pretty simple job to make postfix use authdaemond to authenticate, too."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The first step is to fill out the following information into saslauthd's smtpd.conf. This may be found in one of a few places, including "},{type:b,tag:g,props:{},children:[{type:a,value:"\u002Fetc\u002Fsasl2\u002F"}]},{type:a,value:", "},{type:b,tag:g,props:{},children:[{type:a,value:"\u002Fusr\u002Flib\u002Fsasl2\u002F"}]},{type:a,value:", and "},{type:b,tag:g,props:{},children:[{type:a,value:"\u002Fetc\u002Fpostfix\u002Fsasl\u002F"}]},{type:a,value:". Find your distribution's copy, and paste in the following:"}]},{type:a,value:c},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,o]},children:[{type:b,tag:p,props:{},children:[{type:a,value:"pwcheck_method: authdaemond\nmech_list: PLAIN LOGIN\nauthdaemond_path: \u002Fvar\u002Frun\u002Fcourier\u002Fauthdaemon\u002Fsocket\n\nauxprop_plugin: mysql\nsql_select: "},{type:b,tag:e,props:{className:[f,"keyword"]},children:[{type:a,value:"select"}]},{type:a,value:" stuff from things where user "},{type:b,tag:e,props:{className:[f,"operator"]},children:[{type:a,value:"="}]},{type:a,value:" "},{type:b,tag:e,props:{className:[f,"string"]},children:[{type:a,value:"'%u'"}]},{type:b,tag:e,props:{className:[f,"punctuation"]},children:[{type:a,value:";"}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Note that the last two lines there serve to achieve absolutely nothing, but stop saslauthd whinging and filling your logs with stuff about not having them configured. Now if you've followed Postfix's security guidelines, you will have left it in its chroot jail. If not, I hope you have a damn good reason for having taken it out, as it means that if your mail system is compromised, it's far less likely that the rest of your machine is at risk."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If you "},{type:b,tag:"em",props:{},children:[{type:a,value:"have"}]},{type:a,value:" left it in its jail, you will find that you still can't authenticate, as Postfix starts shouting about not being able to find the Courier-Authdaemon socket to connect to. This is quite right, as the socket is located outside of Postfix's jail. You probably can't hard link, as \u002Fvar\u002Frun is a different partition to \u002F, and symlinking from within the chroot jail will fail, as the folder you want to symlink to is located outside it, so it can't see it. I found a nifty way to do this "},{type:b,tag:h,props:{href:"http:\u002F\u002Fwww.thelazysysadmin.net\u002F2009\u002F08\u002Fcannot-connect-to-courier-authdaemond-no-such-file-or-directory\u002F",target:j},children:[{type:a,value:"here"}]},{type:a,value:". I'll detail the content as follows."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Note: Before you do this, make sure that before you stop the courier-authdaemon, you check which folder on your Linux system contains the authdaemon socket. You will be able to find this by using the command "},{type:b,tag:g,props:{},children:[{type:a,value:"lsof -n | grep authdaemon"}]},{type:a,value:t}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"First, you need to stop the Courier-Authdaemon. This depends on your OS, but on Ubuntu, you will run "},{type:b,tag:g,props:{},children:[{type:a,value:"\u002Fetc\u002Finit.d\u002Fcourier-authdaemon stop"}]},{type:a,value:". Now you need to remove the folder in which the socket is normally created:"}]},{type:a,value:c},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,o]},children:[{type:b,tag:p,props:{},children:[{type:b,tag:e,props:{className:[f,q]},children:[{type:a,value:"rm"}]},{type:a,value:" -rf \u002Fvar\u002Frun\u002Fcourier\u002Fauthdaemon\u002F\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"You now need to symlink the folder outside the chroot to the folder inside. This means that courier's authdaemon, which is running outside the chroot, will unwittingly be putting its socket in a folder within Postfix's chroot, while it doesn't see any difference from the way in which it originally did so. First, make sure the folder you're symlinking to exists, then put the symlink in place:"}]},{type:a,value:c},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,o]},children:[{type:b,tag:p,props:{},children:[{type:b,tag:e,props:{className:[f,q]},children:[{type:a,value:"mkdir"}]},{type:a,value:" -p \u002Fvar\u002Fspool\u002Fpostfix\u002Fvar\u002Frun\u002Fcourier\u002Fauthdaemon\u002F\n"},{type:b,tag:e,props:{className:[f,q]},children:[{type:a,value:"ln"}]},{type:a,value:" -s \u002Fvar\u002Fspool\u002Fpostfix\u002Fvar\u002Frun\u002Fcourier\u002Fauthdaemon\u002F \u002Fvar\u002Frun\u002Fcourier\u002Fauthdaemon\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now start Courier-Authdaemon again, and if you check \u002Fvar\u002Fspool\u002Fpostfix\u002Fvar\u002Frun\u002Fcourier\u002Fauthdaemon, you will see that in there is the file we pointed it to, in the sasl smtpd.conf."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now restart Postfix, and you will hopefully be able to authenticate to SMTP, and send messages without a problem."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If anybody has experienced this same problem, and has any other resolution for it, I'd be intrigued to see how it has been done, or yet again, if anybody has any questions, either direct them to me in the comments, or if you'd prefer to contact me privately, just fill out the form on my contact page!"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"n00b"}]}]},dir:"\u002Fposts",path:"\u002Fposts\u002Fpostfix-and-courier-imap-authentication-mysql-using-courier",extension:".md",readingStats:{text:"5 min read",minutes:4.37,time:262200,words:874}}}],fetch:{},mutations:void 0}}("text","element","\n","p","span","token","strong","a","http:\u002F\u002Fflurdy.com\u002Fdocs\u002Fpostfix\u002F","_blank","div","nuxt-content-highlight","pre","language-bash","line-numbers","code","function",null,"2011-08-09T14:00:00.000Z",".")));