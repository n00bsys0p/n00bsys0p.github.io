__NUXT_JSONP__("/posts/building-yaml-router-falcon-framework", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH){return {data:[{post:{slug:"building-yaml-router-falcon-framework",description:"How to build a simple but extensible YAML router for the Falcon WSGI framework for Python",title:"Building a YAML router for Falcon Framework",imagesource:"https:\u002F\u002Fcommons.wikimedia.org\u002Fwiki\u002FFile:Aplomado_Falcon_at_a_falconry_center.jpg",imagecredit:"Peter K Burian",image:"2017.03.31T03:55:35_building-yaml-router-falcon-framework.jpg",createdAt:ae,updatedAt:ae,toc:[{depth:C,text:af},{depth:C,text:ag},{depth:C,text:ah},{depth:C,text:ai},{depth:C,text:aj},{depth:C,text:ak},{depth:C,text:al}],body:{type:"root",children:[{type:b,tag:n,props:{},children:[{type:a,value:"Today, we're going to go over how to build a YAML router for the "},{type:b,tag:D,props:{href:"https:\u002F\u002Ffalconframework.org\u002F"},children:[{type:a,value:"Python Framework \"Falcon\""}]},{type:a,value:l}]},{type:a,value:f},{type:b,tag:am,props:{},children:[{type:a,value:"Introduction"}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"Falcon is a lightweight, unopinionated web framework for Python. I've used it for a number of personal and freelance projects recently, and have been extremely impressed with its performance, scalability and simplicity. It's designed primarily for "},{type:b,tag:D,props:{href:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FRepresentational_state_transfer"},children:[{type:a,value:"RESTful APIs"}]},{type:a,value:", as one of the most important characteristics of any web API is extremely good performance, both under high and low levels of traffic."}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"In fact, it's so lightweight and unopinionated, it doesn't require any libraries other than "},{type:b,tag:D,props:{href:"https:\u002F\u002Fpypi.python.org\u002Fpypi\u002Fsix"},children:[{type:a,value:"six"}]},{type:a,value:" for Python 2\u002F3 compatibility and "},{type:b,tag:D,props:{href:"https:\u002F\u002Fpypi.python.org\u002Fpypi\u002Fpython-mimeparse"},children:[{type:a,value:"python-mimeparse"}]},{type:a,value:" for correctly parsing content types. This means request routing is all hard coded, which gets pretty messy and hard to read for larger projects. My solution for this is to allow route configuration via YAML."}]},{type:a,value:f},{type:b,tag:am,props:{},children:[{type:a,value:"Building the router"}]},{type:a,value:f},{type:b,tag:E,props:{},children:[{type:a,value:af}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"By default, you add routes to your application manually in code by calling falcon.API's \"add_route\" method, passing it a URI template and a \"resource\". A resource in Falcon is any class which provides responder methods which map to HTTP request verbs."}]},{type:a,value:f},{type:b,tag:E,props:{},children:[{type:a,value:ag}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"First of all, we need to install a version of Python supported by Falcon. For this example, I used 3.6.1 - the latest release of Python 3 - although any Falcon-supported Python 3 should work identically for our purposes. We'll use "},{type:b,tag:D,props:{href:"https:\u002F\u002Fgithub.com\u002Fpyenv\u002Fpyenv"},children:[{type:a,value:"PyEnv"}]},{type:a,value:", which provides a way to easily manage any number of Python versions and VirtualEnvs based on them."}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"Below, we're using packages provided by Debian Jessie. If you're using a different Linux distribution, or Windows the top part of the instructions will differ."}]},{type:a,value:f},{type:b,tag:u,props:{className:[v]},children:[{type:b,tag:w,props:{className:[x,G]},children:[{type:b,tag:r,props:{},children:[{type:a,value:V},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:W}]},{type:a,value:" -L https:\u002F\u002Fraw.githubusercontent.com\u002Fpyenv\u002Fpyenv-installer\u002Fmaster\u002Fbin\u002Fpyenv-installer "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:X}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"bash"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:".\n\n$ "},{type:b,tag:c,props:{className:[d,z,B]},children:[{type:a,value:"echo"}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"'export PATH=\"~\u002F.pyenv\u002Fbin:$PATH\"\neval \"$(pyenv init -)\"\neval \"$(pyenv virtualenv-init -)\"'"}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:" ~\u002F.bashrc\n\n$ "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"sudo"}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"apt-get"}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:H}]},{type:a,value:" -y build-essential libssl-dev libreadline-dev libsqlite3-dev libbz2-dev libyaml-dev zlib1g-dev\n"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:".\n\n$ pyenv "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:H}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,P]},children:[{type:a,value:an}]},{type:a,value:".1\n"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:".\n\n$ pyenv virtualenv "},{type:b,tag:c,props:{className:[d,P]},children:[{type:a,value:an}]},{type:a,value:".1 falcon-yaml-router\n"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:".\n"}]}]}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"We'll now go and set up our project's VCS with some sensible defaults for a Python project."}]},{type:a,value:f},{type:b,tag:u,props:{className:[v]},children:[{type:b,tag:w,props:{className:[x,G]},children:[{type:b,tag:r,props:{},children:[{type:a,value:V},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"mkdir"}]},{type:a,value:" -p \u002Fpath\u002Fto\u002Fproject\n\n$ "},{type:b,tag:c,props:{className:[d,z,B]},children:[{type:a,value:"cd"}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:" init\nInitialised empty Git repository "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ap}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"wget"}]},{type:a,value:" -O .gitignore "},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\"https:\u002F\u002Fraw.githubusercontent.com\u002Fgithub\u002Fgitignore\u002Fmaster\u002FPython.gitignore\""}]},{type:a,value:"\n\n$ pyenv "},{type:b,tag:c,props:{className:[d,z,B]},children:[{type:a,value:"local"}]},{type:a,value:" falcon-yaml-router\n\n"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:H}]},{type:a,value:" -U pip\n"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:H}]},{type:a,value:" falcon\n"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:H}]},{type:a,value:" PyYaml\n"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:" $ pip freeze "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:" requirements.txt\n\n"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aq}]},{type:a,value:" -A\n\n"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\"Initial commit\""}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"Now we're ready to start coding our project."}]},{type:a,value:f},{type:b,tag:E,props:{},children:[{type:a,value:ah}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"Let's build a couple of very simple resources we can use to test our application. Create a file called "},{type:b,tag:r,props:{},children:[{type:a,value:"resources.py"}]},{type:a,value:" in the project folder and enter the following:"}]},{type:a,value:f},{type:b,tag:u,props:{className:[v]},children:[{type:b,tag:w,props:{className:[x,aa]},children:[{type:b,tag:r,props:{},children:[{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:I}]},{type:a,value:" json\n\n"},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ab}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:"QuoteResource"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:"\n\n    quotes "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:q}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:S}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"'arthur-c-clarke'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:K}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"'Any sufficiently advanced technology '"}]},{type:a,value:"\n             "},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"'is indistinguishable from magic.'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:L}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:T}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:U}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"on_get"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:" person"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:" num"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,O,k]},children:[{type:a,value:"\"\"\"\n        Respond to GET requests\n\n        Send a quote back to the user\n        \"\"\""}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:q}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:S}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"'quote'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:" self"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"quotes"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:K}]},{type:a,value:"person"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:"int"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"num"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:L}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ab}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:"EchoResource"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:U}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"on_post"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,O,k]},children:[{type:a,value:"\"\"\"\n        Respond to POST requests\n\n        Decode incoming JSON data then dump it back to the user\n        \"\"\""}]},{type:a,value:"\n        data "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:q}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"loads"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"req"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"stream"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"read"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:q}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"data"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:ay}]}]}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"These are both very simple resources, and could easily have been combined into a single resource, but we've split it up so we can show the use of multiple routes."}]},{type:a,value:f},{type:b,tag:E,props:{},children:[{type:a,value:ai}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"Let's create a file called "},{type:b,tag:r,props:{},children:[{type:a,value:"routing.py"}]},{type:a,value:p}]},{type:a,value:f},{type:b,tag:u,props:{className:[v]},children:[{type:b,tag:w,props:{className:[x,aa]},children:[{type:b,tag:r,props:{},children:[{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:I}]},{type:a,value:" yaml\n"},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:I}]},{type:a,value:" importlib\n\n"},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:az}]},{type:a,value:" falcon "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:I}]},{type:a,value:" routing\n\n"},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ab}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"routing"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"CompiledRouter"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,O,k]},children:[{type:a,value:"\"\"\"\n    Falcon CompiledRouter extension to automatically load routes from a YAML\n    configuration file.\n    \"\"\""}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:U}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aB}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:" routing_file"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,O,k]},children:[{type:a,value:"\"\"\"\n        Constructor - load routes from YAML\n        \"\"\""}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:"super"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:aB},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:"\n        self"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"_routing_file "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:q}]},{type:a,value:" routing_file\n        self"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:U}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aC}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,O,k]},children:[{type:a,value:"\"\"\"\n        Load the routes from the configured file\n\n        Here's where the magic happens. We use importlib to import a module\n        from its string representation, and then load the resource by fetching\n        the class as an attribute from the module.\n        \"\"\""}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"with"}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:"open"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"_routing_file"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"'r'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"as"}]},{type:a,value:" f"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:"\n            routes "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:q}]},{type:a,value:" yaml"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"load"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"f"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:"\n\n        "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"for"}]},{type:a,value:" uri_tpl"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:" resource "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ap}]},{type:a,value:" routes"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"items"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:"\n            module_parts "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:q}]},{type:a,value:" resource"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"split"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:"\n            module_name "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:q}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"join"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"module_parts"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aE}]},{type:b,tag:c,props:{className:[d,P]},children:[{type:a,value:aF}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:"\n\n            module "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:q}]},{type:a,value:" importlib"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"import_module"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"module_name"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:"\n            Resource "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:q}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:"getattr"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"module"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:" module_parts"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aE}]},{type:b,tag:c,props:{className:[d,P]},children:[{type:a,value:aF}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:"\n\n            resource_instance "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:q}]},{type:a,value:" Resource"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:"\n            method_map "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:q}]},{type:a,value:" routing"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"create_http_method_map"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"resource_instance"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:"\n            self"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"add_route"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"uri_tpl"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:" method_map"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:" resource_instance"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:E,props:{},children:[{type:a,value:aj}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"Now that we've got our router in place, let's set up the routing configuration file. Let's call it "},{type:b,tag:r,props:{},children:[{type:a,value:"routing.yml"}]},{type:a,value:aG}]},{type:a,value:f},{type:b,tag:u,props:{className:[v]},children:[{type:b,tag:w,props:{className:[x,"language-text"]},children:[{type:b,tag:r,props:{},children:[{type:a,value:"---\n\u002Fquote\u002F{person}\u002F{num}: resources.QuoteResource\n\u002Fecho: resources.EchoResource\n"}]}]}]},{type:a,value:f},{type:b,tag:E,props:{},children:[{type:a,value:ak}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"Now let's set up a very simple WSGI application to run via "},{type:b,tag:D,props:{href:"http:\u002F\u002Fgunicorn.org\u002F"},children:[{type:a,value:"Gunicorn"}]},{type:a,value:". Start by creating a file called "},{type:b,tag:r,props:{},children:[{type:a,value:"application.py"}]},{type:a,value:aG}]},{type:a,value:f},{type:b,tag:u,props:{className:[v]},children:[{type:b,tag:w,props:{className:[x,aa]},children:[{type:b,tag:r,props:{},children:[{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:I}]},{type:a,value:" falcon\n\n"},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:az}]},{type:a,value:" routing "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:I}]},{type:a,value:" YamlRouter\n\napplication "},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:q}]},{type:a,value:" falcon"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"api"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"API"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"router"},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:q}]},{type:a,value:aA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"'routing.yml'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"That's all we should need to get things working!"}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"To run the application, let's first install gunicorn:"}]},{type:a,value:f},{type:b,tag:u,props:{className:[v]},children:[{type:b,tag:w,props:{className:[x,G]},children:[{type:b,tag:r,props:{},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:H}]},{type:a,value:" gunicorn\n"}]}]}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"And finally run the application:"}]},{type:a,value:f},{type:b,tag:u,props:{className:[v]},children:[{type:b,tag:w,props:{className:[x,G]},children:[{type:b,tag:r,props:{},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:" $ gunicorn application:application --log-level"},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:q}]},{type:a,value:"debug\n"}]}]}]},{type:a,value:f},{type:b,tag:E,props:{},children:[{type:a,value:al}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"Let's issue some HTTP requests using "},{type:b,tag:D,props:{href:"https:\u002F\u002Fcurl.haxx.se\u002F"},children:[{type:a,value:"cURL"}]},{type:a,value:" to test that our router works:"}]},{type:a,value:f},{type:b,tag:u,props:{className:[v]},children:[{type:b,tag:w,props:{className:[x,G]},children:[{type:b,tag:r,props:{},children:[{type:a,value:V},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:W}]},{type:a,value:" -XGET "},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\"http:\u002F\u002Flocalhost:8000\u002Fquote\u002Farthur-c-clarke\u002F0\""}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:X}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:S}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\"quote\""}]},{type:b,tag:c,props:{className:[d,z,B]},children:[{type:a,value:p}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\"Any sufficiently advanced technology is indistinguishable from magic.\""}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:T}]},{type:a,value:"\n\n$ "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:W}]},{type:a,value:" -XPOST --data "},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"'{\"random-key\":\"StuffAndThings\"}'"}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\"http:\u002F\u002Flocalhost:8000\u002Fecho\""}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:X}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:S}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\"random-key\""}]},{type:b,tag:c,props:{className:[d,z,B]},children:[{type:a,value:p}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\"StuffAndThings\""}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:T}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"As we can see, QuoteResource returns an item from the self.quotes dictionary, and EchoResource decodes then re-encodes the user's JSON input. Now we can commit our code to the repository:"}]},{type:a,value:f},{type:b,tag:u,props:{className:[v]},children:[{type:b,tag:w,props:{className:[x,G]},children:[{type:b,tag:r,props:{},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aq}]},{type:a,value:" -A\n"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\"Implemented YAML router\""}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"This is an extremely simple example, but extending this to support almost anything is possible. To add further configurable behaviours just change the mappings in routing.yml to point each URI template to a YAML hash instead of just a string representation of the class."}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"That's all we have for today, speak you all again with my next post!"}]}]},dir:"\u002Fposts",path:"\u002Fposts\u002Fbuilding-yaml-router-falcon-framework",extension:".md",readingStats:{text:"5 min read",minutes:4.865,time:291900,words:973}}}],fetch:{},mutations:void 0}}("text","element","span","token","punctuation","\n","(",")"," ","function","string",".","operator","p","keyword",":","=","code","..",",","div","nuxt-content-highlight","pre","line-numbers","falcon-yaml-router","builtin","\n        ","class-name",2,"a","h2",". snip ","language-bash","install","import","git","[","]","\n\n    ","self","triple-quoted-string","number"," $ pip "," $ ","{","}","def","$ ","curl","|","&","gt",";",".\n\n","language-python","class","\n    "," json","2017-03-31T03:55:35.000Z","How routing works out of the box","Initialising our application","Writing resources to apply to our router","Mapping routes from a YAML hash","Configure routing","Set up and run the application","Test the application","h1","3.6"," \u002Fpath\u002Fto\u002Fproject\n\n$ ","in","add"," commit -m ","\n            "," req"," resp","\n        resp","body ","dumps","\n\n","from","YamlRouter","__init__","_load_routes","'.'","-","1"," in the project root:"," python -mjson.tool\n")));