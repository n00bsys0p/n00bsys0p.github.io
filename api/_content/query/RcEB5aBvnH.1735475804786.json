{"_path":"/posts/ansible-only-show-changed","_dir":"posts","_draft":false,"_partial":false,"_locale":"","title":"Ansible - Hide OK & Skipped","description":"How to only show tasks that caused a change when using Ansible","imagesource":"http://github.com/ansible/logos","imagecredit":"The AWX Project is a trademark of Red Hat, Inc., used with permission.","image":"2024.11.13T183000_ansible-only-show-changes.png","createdAt":"2024-11-13T18:30:00","updatedAt":"2024-11-13T18:30:00","readingTime":{"text":"1 min read","minutes":0.99,"time":59400,"words":198},"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I was recently working on a long Ansible playbook that had a couple of unexpected things happening during\na run, and I needed to run it in "},{"type":"element","tag":"a","props":{"href":"https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_checkmode.html#using-check-mode","rel":["nofollow"]},"children":[{"type":"text","value":"\"check\" (or dry-run) mode"}]},{"type":"text","value":"\na whole bunch of times to figure out what it was going to change. To speed up the process, I wanted to\ndisable output of all non-"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"changed"}]},{"type":"text","value":" tasks, as reading back through thousands of lines of output every time\nI ran it wasn't my idea of a good time."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It turns out to be really simple, although it took me a while to find the answer. There are two approaches,\neach of which may be useful depending on your situation. The first is to change your ansible.cfg and add\nor alter the following entries:"}]},{"type":"element","tag":"pre","props":{"className":"language-ini shiki shiki-themes github-dark","code":"[defaults]\ndisplay_ok_hosts = no\ndisplay_skipped_hosts = no\n","filename":"ansible.cfg","language":"ini","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#B392F0"},"children":[{"type":"text","value":"[defaults]\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#F97583"},"children":[{"type":"text","value":"display_ok_hosts"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E1E4E8"},"children":[{"type":"text","value":" = no\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#F97583"},"children":[{"type":"text","value":"display_skipped_hosts"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E1E4E8"},"children":[{"type":"text","value":" = no\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The other approach, which was suitable for my purposes, was to use environment variables. The simplest option\nfor me in a BASH shell was to prefix the command to set these two variables, as follows:"}]},{"type":"element","tag":"pre","props":{"className":"language-bash shiki shiki-themes github-dark","code":"ANSIBLE_DISPLAY_OK_HOSTS=false ANSIBLE_DISPLAY_SKIPPED_HOSTS=false ansible-playbook my-playbook.yaml\n","language":"bash","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#E1E4E8"},"children":[{"type":"text","value":"ANSIBLE_DISPLAY_OK_HOSTS"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#F97583"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9ECBFF"},"children":[{"type":"text","value":"false"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E1E4E8"},"children":[{"type":"text","value":" ANSIBLE_DISPLAY_SKIPPED_HOSTS"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#F97583"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9ECBFF"},"children":[{"type":"text","value":"false"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#B392F0"},"children":[{"type":"text","value":" ansible-playbook"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9ECBFF"},"children":[{"type":"text","value":" my-playbook.yaml\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This achieves exactly the same as altering ansible.cfg, but is easily reversible by just not prefixing when\nyou no longer need the command's output to be limited to only "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"changed"}]},{"type":"text","value":" tasks."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"'til next time!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Alex"}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:posts:2024-11-13-ansible-only-show-changed.md","_source":"content","_file":"posts/2024-11-13-ansible-only-show-changed.md","_stem":"posts/2024-11-13-ansible-only-show-changed","_extension":"md"}